# bot.py
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes
import config

# Enable logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    welcome_message = (
        f"‡§®‡§Æ‡§∏‡•ç‡§§‡•á {user.first_name}!\n\n"
        "‡§π‡§Æ‡§æ‡§∞‡•á ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§¨‡•â‡§ü ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à‡•§ üìö\n\n"
        "‡§π‡§Æ ‡§Ü‡§™‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§∏‡•ç‡§ü‡§°‡•Ä ‡§Æ‡§ü‡•á‡§∞‡§ø‡§Ø‡§≤ ‡§î‡§∞ ‡§ï‡•ã‡§∞‡•ç‡§∏‡•á‡§ú ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§\n"
        "‡§Ü‡§™ ‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:\n\n"
        "/subscribe - ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§™‡•ç‡§≤‡§æ‡§®‡•ç‡§∏ ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        "/channel - ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Ü‡§ß‡§ø‡§ï‡§æ‡§∞‡§ø‡§ï ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§ö‡•à‡§®‡§≤ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        "/help - ‡§Æ‡§¶‡§¶ ‡§ï‡•á ‡§≤‡§ø‡§è‡•§"
    )
    await update.message.reply_html(welcome_message)

# /help ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    help_text = (
        "‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç:\n\n"
        "/start - ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        "/subscribe - ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§∂‡§® ‡§™‡•ç‡§≤‡§æ‡§®‡•ç‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§\n"
        "/channel - ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§ö‡•à‡§®‡§≤ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç‡•§"
    )
    await update.message.reply_text(help_text)

# /subscribe ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def subscribe(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("‚≠ê ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡•ç‡§≤‡§æ‡§®‡•ç‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç", url=config.WEBSITE_URL)],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§∏‡§¨‡•ç‡§∏‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§∂‡§® ‡§™‡•ç‡§≤‡§æ‡§®‡•ç‡§∏ ‡§¶‡•á‡§ñ‡§®‡•á ‡§î‡§∞ ‡§ñ‡§∞‡•Ä‡§¶‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç:",
        reply_markup=reply_markup
    )

# /channel ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def channel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("üöÄ ‡§ö‡•à‡§®‡§≤ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç", url=config.STUDY_CHANNEL_LINK)],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü, ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§î‡§∞ ‡§∏‡•ç‡§ü‡§°‡•Ä ‡§Æ‡§ü‡•á‡§∞‡§ø‡§Ø‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Ü‡§ß‡§ø‡§ï‡§æ‡§∞‡§ø‡§ï ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§ö‡•à‡§®‡§≤ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç:",
        reply_markup=reply_markup
    )

def main() -> None:
    """Start the bot."""
    # ‡§¨‡•â‡§ü ‡§ï‡§æ Application ‡§ë‡§¨‡•ç‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç
    application = Application.builder().token(config.BOT_TOKEN).build()

    # ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏ ‡§ï‡•ã ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("subscribe", subscribe))
    application.add_handler(CommandHandler("channel", channel))

    # ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§ö‡§≤‡§æ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
    print("Bot is running...")
    application.run_polling()

if __name__ == "__main__":
    main()
