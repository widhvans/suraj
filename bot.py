# bot.py (Updated for sending website link)

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import config

# ‡§≤‡•â‡§ó‡§ø‡§Ç‡§ó ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó‡§∞‡•á‡§∂‡§® (‡§™‡§π‡§≤‡•á ‡§ú‡•à‡§∏‡§æ ‡§π‡•Ä)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

# ‡§Ø‡§π ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡§æ ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§ó‡§æ
async def send_website_link(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Sends a message with a button to the hosted website."""
    
    # ‡§ï‡•Ä‡§¨‡•ã‡§∞‡•ç‡§° ‡§¨‡§ü‡§® ‡§ú‡•ã ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§ï‡•á ‡§≤‡§ø‡§Ç‡§ï ‡§ï‡•Ä ‡§ì‡§∞ ‡§≤‡•á ‡§ú‡§æ‡§è‡§ó‡§æ
    keyboard = [
        [InlineKeyboardButton("üåê ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç", url=config.WEBSITE_URL)],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # ‡§≠‡•á‡§ú‡§æ ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú
    message_text = (
        "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! üëã\n\n"
        "‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§î‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§∂‡§® ‡§™‡•ç‡§≤‡§æ‡§® ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç‡•§\n\n"
        f"‡§Ü‡§™ ‡§∏‡•Ä‡§ß‡•á ‡§á‡§∏ ‡§≤‡§ø‡§Ç‡§ï ‡§™‡§∞ ‡§≠‡•Ä ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç: {config.WEBSITE_URL}"
    )

    # ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•ã ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡•á‡§Ç
    await update.message.reply_text(message_text, reply_markup=reply_markup)


# ‡§Ø‡§π ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§ó‡§æ (‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•ã ‡§õ‡•ã‡§°‡§º‡§ï‡§∞)
async def handle_any_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handles any non-command text message by sending the website link."""
    logger.info(f"Received a non-command message from {update.effective_user.first_name}")
    await send_website_link(update, context)


def main() -> None:
    """Start the bot."""
    # ‡§è‡§™‡•ç‡§≤‡•Ä‡§ï‡•á‡§∂‡§® ‡§ë‡§¨‡•ç‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡§æ
    application = Application.builder().token(config.BOT_TOKEN).build()

    # 1. /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    # ‡§ú‡§¨ ‡§ï‡•ã‡§à ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§ó‡§æ, ‡§§‡•ã ‡§â‡§∏‡•á ‡§≤‡§ø‡§Ç‡§ï ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ
    application.add_handler(CommandHandler("start", send_website_link))

    # 2. ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    # ‡§Ö‡§ó‡§∞ ‡§Ø‡•Ç‡§ú‡§∞ /start ‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§≤‡§ø‡§ñ‡§§‡§æ ‡§π‡•à (‡§ú‡•à‡§∏‡•á "hello", "link do", ‡§Ü‡§¶‡§ø), ‡§§‡•ã ‡§≠‡•Ä ‡§â‡§∏‡•á ‡§≤‡§ø‡§Ç‡§ï ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_any_message))

    # ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§ö‡§≤‡§æ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
    logger.info("Bot is starting in link-sending mode...")
    application.run_polling(drop_pending_updates=True)


if __name__ == "__main__":
    main()
